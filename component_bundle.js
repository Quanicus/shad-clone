const t=document.createElement("template");t.innerHTML='\n    <style>\n        * {\n            box-sizing: border-box;\n            scrollbar-width: none;\n        }\n        :host {\n            position: relative;\n            display: block;\n            font-size: 1rem;\n            cursor: text;\n            width: 100%;\n            max-width: 100%;\n        }\n        :host(:focus) {\n            & .placeholder::after {\n                font-size: 0.65rem;\n                top: -0.65em;\n                color: white;\n                padding-inline: 0.3em;\n                transition-duration: 0.15s;\n            }\n            & .text-display {\n                border-color: white;\n                \n            }\n            & span{\n                &.caret::after {\n                    content: \'\';\n                    position: absolute;\n                    left: 0;\n                    width: 1px;\n                    height: 100%;\n                    background-color: gold;\n                    animation: blink 1s step-end infinite;\n                }\n                &.selected {\n                    background-color: gold;\n                    color: black;\n                }\n            }\n            & input {\n                z-index: 2;\n            }\n        }\n        :host(:hover) {\n            & .placeholder::after {\n                \n            }\n            & .text-display {\n                border-color: white;\n            }\n        }\n        :host([type="password"]) {\n            & input {\n                letter-spacin: 0.2em;\n            }\n        }\n        .placeholder {\n            --placeholder: "default";\n            position: relative;\n            padding: 0.5em;\n            height: 100%;\n            width: 100%;\n            background-color: black;\n\n            &::after {\n                content: var(--placeholder);\n                position: absolute;\n                font-size: 0.65rem;\n                top: -0.65em;\n                left: 1em;\n                color: gold;\n                background-color: inherit;\n                padding-inline: 0.3em;\n                transition-property: top, font-size;\n                transition-duration: 0.15s;\n                transition-timing-function: ease-in;\n            }     \n        }\n        .placeholder.empty {\n            &::after {\n                top: 0.5rem;\n                border-radius: 50%;\n                transition-duration: 0.25s;\n                font-size: 1rem;\n                color: white;\n            }\n        }\n        .text-display {\n            position: absolute;\n            display: flex;\n            align-items: center;\n            padding-inline: .5rem;\n            top: 0;\n            left: 0;\n            border: 1px solid #303030;\n            border-radius: 5px;\n            width: 100%;\n            height: 100%;\n            background-color: black;\n            overflow-x: scroll;\n\n            & span {\n                position: relative;\n                animation: drop-in .35s forwards;\n                flex-shrink: 0;\n            }\n        }\n        @keyframes drop-in {\n            0%, 35% {\n                transform: translateY(0);\n                opacity: 1;\n                color: gold;\n                \n            }\n            100% {\n                transform: translateY(0);\n                opacity: 1;\n                color: white;\n            }\n        }\n        @keyframes blink {\n            from, to {\n                visibility: visible;\n            }\n            50% {\n                visibility: hidden;\n            }\n        }\n        input {\n            all: unset;\n            position: relative;\n            width: 100%;\n            height: 100%;\n\n            &::selection {\n                background: transparent;\n            }\n            background: transparent;\n            color: transparent;\n        }\n\n    </style>\n    <div class="placeholder">\n        <input spellcheck="false"/>\n        <div class="text-display"></div>\n    </div>\n    \n    \n';class e extends HTMLElement{static formAssociated=!0;static emailRegex="^[^@]+@[^@]+.[^@]+$";static inputTypes=["text","password","email","search","tel","url"];constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0)),this._internals=this.attachInternals(),this.display=this.shadowRoot.querySelector(".text-display"),this.input=this.shadowRoot.querySelector("input"),this.selectedCards=[],this.bubbleEvents(["change"]),this.attachListeners()}static get observedAttributes(){return["value","type","disabled","required","maxlength","minlength","pattern","readonly","autocomplete","autofocus","name","size"]}attributeChangedCallback(t,n,i){if(n!==i){switch(t){case"type":if(!e.inputTypes.includes(i))throw new Error("shad-input-text can only be of types:",e.inputTypes);"email"===i&&(this.input.pattern=e.emailRegex,i="text");break;case"value":this.input[t]=i,this.input.dispatchEvent(new Event("input"))}this.input[t]=i}}connectedCallback(){this._internals.setValidity(this.input.validity,this.input.validationMessage),this.tabIndex=this.getAttribute("tabindex")??"-1",this.initialValue=this.value,this.setPlaceholder(),this.initCaret(),this._proxyInput()}bubbleEvents(t){t.forEach((t=>{this.input.addEventListener(t,(e=>{const n=new CustomEvent(t,{bubbles:!0,cancelable:!0,composed:!0,detail:{originalEvent:e}});this.dispatchEvent(n)}))}))}attachListeners(){const t=this.input;t.addEventListener("beforeinput",this.handleBeforeInput),t.addEventListener("input",this.handleAfterInput),t.addEventListener("scroll",this.syncScroll),t.addEventListener("click",this.captureSelection),t.addEventListener("mousedown",this.startSelecting),t.addEventListener("mouseup",this.captureSelection),t.addEventListener("keyup",this.captureSelection),this.addEventListener("focus",(()=>this.input.focus()))}_proxyInput(){const t=this.input;["value","placeholder","disabled","required","maxlength","minlength","pattern","readonly","autocomplete","autofocus","name","size"].forEach((e=>{Object.defineProperty(this,e,{get:()=>t[e],set:t=>{this.setAttribute(e,t)},enumerable:!0,configurable:!0})}))}get value(){return this.input.value}get caretElement(){return this._caretElement}set caretElement(t){this._caretElement!==t&&(this._caretElement.classList.remove("caret"),t&&t.classList.add("caret"),this._caretElement=t)}handleBeforeInput=t=>{const e=this.display,n=this.input,i=n.selectionStart,s=n.selectionEnd,a=n.value.substring(i,s);switch(a&&(this.selectedCards.forEach((t=>this.display.removeChild(t))),this.caretElement=this.display.children[i]),t.inputType){case"insertText":const n=t.data;e.insertBefore(this.makeCharCard(n),this.caretElement);break;case"deleteContentBackward":a||e.removeChild(e.children[i-1]);break;case"insertFromPaste":t.data,[...t.data].forEach((t=>{e.insertBefore(this.makeCharCard(t),this.caretElement)}))}};handleAfterInput=t=>{const e=this.shadowRoot.querySelector(".placeholder"),n=this.input;this.value.length!==this.display.childElementCount-1&&this.syncInput();const i=this.getAttribute("pattern-error")??"";if(this.input.validity.patternMismatch){const t="email"===this.getAttribute("type")?"Please use a valid email format.":i;n.setCustomValidity(t)}else n.setCustomValidity("");this._internals.setFormValue(this.value),this._internals.setValidity(n.validity,n.validationMessage),0===n.value.length?e.classList.add("empty"):e.classList.remove("empty")};syncInput(){this.display.innerHTML="",this.initCaret(),[...this.value].forEach((t=>{this.display.insertBefore(this.makeCharCard(t),this.caretElement)}))}syncScroll=()=>{this.display.scrollLeft=this.input.scrollLeft};startSelecting=t=>{const e=this.input;e.addEventListener("mousemove",this.captureSelection),document.addEventListener("mouseup",(()=>{e.removeEventListener("mousemove",this.captureSelection)}))};captureSelection=t=>{const e=this.input,n=e.selectionStart,i=e.selectionEnd;n!==i?this.selectText(n,i):n&&(this.selectText(),this.caretElement=this.display.children[n])};setPlaceholder(){const t=this.shadowRoot.querySelector(".placeholder"),e=this.getAttribute("placeholder")??"";t.style.setProperty("--placeholder",`"${e}"`),this.value||t.classList.add("empty")}initCaret(){const t=this.makeCharCard();t.innerHTML="&nbsp;",t.classList.add("caret"),this.display.appendChild(t),this._caretElement=t}makeCharCard(t){t&&" "!=t||(t="&nbsp;"),"password"===this.getAttribute("type")&&(t='<svg fill="currentcolor" width="8" height="8" viewBox="0 0 36 36" version="1.1"  preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n            <title>shield-solid</title>\n            <path d="M31.25,7.4a43.79,43.79,0,0,1-6.62-2.35,45,45,0,0,1-6.08-3.21L18,1.5l-.54.35a45,45,0,0,1-6.08,3.21A43.79,43.79,0,0,1,4.75,7.4L4,7.59v8.34c0,13.39,13.53,18.4,13.66,18.45l.34.12.34-.12c.14,0,13.66-5.05,13.66-18.45V7.59Z" class="clr-i-solid clr-i-solid-path-1"></path>\n            <rect x="0" y="0" width="36" height="36" fill-opacity="0"/>\n            </svg>');const e=document.createElement("span");return e.classList.add("char-card"),e.innerHTML=t,e}selectText(t,e){this.selectedCards=[];const n=this.display.children;for(let i=0;i<n.length;i++)i>=t&&i<e?(n[i].classList.add("selected"),this.selectedCards.push(n[i])):n[i].classList.remove("selected")}formAssociatedCallback(t){this.form=t}formDisabledCallback(t){this.input.disabled=t}formResetCallback(){this.initialValue?(this.value=this.initialValue,this.syncInput()):(this.display.innerHTML="",this.initCaret(),this.shadowRoot.querySelector(".placeholder").classList.add("empty"))}formStateRestoreCallback(t,e){this.value=t}}customElements.define("shad-input-text",e);
